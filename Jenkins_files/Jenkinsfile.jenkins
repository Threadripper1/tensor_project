pipeline {
    agent any
    environment {
        registry = "343091671287.dkr.ecr.us-east-2.amazonaws.com/tensor-docker"
    }

    stages {
    // Testing stage
        stage('Test') {
            agent {
                dockerfile true
            }
            steps {
                script {
                    try {
                        sh """
                            echo "Testing...."
                            pytest -q tests.py
                        """
                    } catch (Exception err) {
                        currentBuild.result = 'FAILED'
                    }
                }
            }
        }
        stage ("build image") 
        {
            steps {
                script {
                    dockerImage = docker.build registry
                    }
                }
        }
        stage ("upload to ECR") {
            steps {
                script {
                    sh """
                    aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin 343091671287.dkr.ecr.us-east-2.amazonaws.com
                    docker push 343091671287.dkr.ecr.us-east-2.amazonaws.com/tensor-docker:latest
                    """
                }
            }
        }
        stage("deploy to K8s") {
            steps {
                withKubeConfig(caCertificate:'', clusterName:'', contextName:'', credentialsId:'K8s', namespace:'', serverUrl:'') {
                    sh 'aws eks update-kubeconfig --name tensor_cluster --region us-east-2'
                    sh 'kubectl apply -f eks-deploy-from-ecr.yml'
                }
            }
        }
    }
}